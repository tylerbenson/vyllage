create schema if not exists LOGIN;

create table if not exists LOGIN.users(
--create table if not exists users(
  userid bigint generated by default as identity(start with 0) primary key,
  username varchar_ignorecase(50) not null,
  firstName varchar_ignorecase(50),
  middleName varchar_ignorecase(50),
  lastName varchar_ignorecase(50),
  enabled boolean not null,
  dateCreated timestamp not null,
  lastModified timestamp not null);

create table if not exists LOGIN.personal(
	userid bigint not null,
	graduationDate timestamp,
	emailUpdates varchar_ignorecase(15),
	phoneNumber varchar_ignorecase(20),
	constraint fk_personal_users foreign key(userid) references LOGIN.users(userid));
  
create table if not exists LOGIN.user_credentials(
  userid  bigint not null,
  password varchar_ignorecase(60) not null,
  enabled boolean not null,
  expires timestamp,
  constraint fk_passwords_users foreign key(userid) references LOGIN.users(userid));

create unique index LOGIN.ix_username_password on LOGIN.user_credentials (userid, password);
  
create table if not exists LOGIN.authorities (
--create table if not exists authorities (
  username varchar_ignorecase(50) not null,
  authority varchar_ignorecase(50) not null,
  constraint fk_authorities_users foreign key(username) references LOGIN.users(username));

create unique index LOGIN.ix_auth_username on LOGIN.authorities (username, authority);
--create unique index ix_auth_username on authorities (username,authority);

create table if not exists LOGIN.groups (
--create table if not exists groups (
  id bigint generated by default as identity(start with 0) primary key,
  group_name varchar_ignorecase(50) not null);

create table if not exists LOGIN.group_authorities (
--create table if not exists group_authorities (
  group_id bigint not null,
  authority varchar(50) not null,
  constraint fk_group_authorities_group foreign key(group_id) references LOGIN.groups(id));

create table if not exists LOGIN.group_members (
--create table if not exists group_members (
  id bigint generated by default as identity(start with 0) primary key,
  username varchar(50) not null,
  group_id bigint not null,
  constraint fk_group_members_group foreign key(group_id) references LOGIN.groups(id));

create table if not exists LOGIN.persistent_logins (
--create table if not exists persistent_logins (
  username varchar(64) not null,
  series varchar(64) primary key,
  token varchar(64) not null,
  last_used timestamp not null);
  

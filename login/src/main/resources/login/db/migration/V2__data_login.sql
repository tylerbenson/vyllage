--create table users(
--  username varchar_ignorecase(50) not null primary key,
--  password varchar_ignorecase(60) not null,
--  enabled boolean not null);
--NOTE: password == '$2a$10$6REiiQD8i4FTE4D/X3.chOnlgxghwWMGcngksAjyQun0njGDQznxq'
insert into LOGIN.users ( username, firstName, middleName, lastName, enabled, dateCreated, lastModified) values ( 'email', 'Luke', 'V', 'Skywalker', true, CURRENT_DATE(), CURRENT_DATE());
insert into LOGIN.users ( username, enabled, dateCreated, lastModified ) values ( 'testuser@vyllage.com', true, CURRENT_DATE(), CURRENT_DATE());
insert into LOGIN.users ( username, enabled, dateCreated, lastModified ) values ( 'deana@vyllage.com', true, CURRENT_DATE(), CURRENT_DATE() );
insert into LOGIN.users ( username, enabled, dateCreated, lastModified ) values ( 'someone@vyllage.com', true, CURRENT_DATE(), CURRENT_DATE() );

--create table if not exists LOGIN.personal(
--	userid bigint not null,
--	graduationDate timestamp,
--	emailUpdates varchar_ignorecase(15),
--	phoneNumber varchar_ignorecase(20),
--	constraint fk_personal_users foreign key(userid) references LOGIN.users(userid));
insert into LOGIN.personal(userid, graduationDate, emailUpdates, phoneNumber) values (0, CURRENT_DATE(), 'weekly', '123456789');

--create table if not exists LOGIN.user_credentials(
--  userid  bigint not null,
--  password varchar_ignorecase(60) not null,
--  enabled boolean not null,
--  expires timestamp not null,
--  constraint fk_passwords_users foreign key(userid) references LOGIN.users(userid));
insert into LOGIN.user_credentials (userid, password, enabled, expires) values (0, '$2a$10$6REiiQD8i4FTE4D/X3.chOnlgxghwWMGcngksAjyQun0njGDQznxq', true, null);
insert into LOGIN.user_credentials (userid, password, enabled, expires) values (1, '$2a$10$6REiiQD8i4FTE4D/X3.chOnlgxghwWMGcngksAjyQun0njGDQznxq', true, null);
insert into LOGIN.user_credentials (userid, password, enabled, expires) values (2, '$2a$10$6REiiQD8i4FTE4D/X3.chOnlgxghwWMGcngksAjyQun0njGDQznxq', true, null);
insert into LOGIN.user_credentials (userid, password, enabled, expires) values (3, '$2a$10$6REiiQD8i4FTE4D/X3.chOnlgxghwWMGcngksAjyQun0njGDQznxq', true, null);

--create table authorities (
--  username varchar_ignorecase(50) not null,
--  authority varchar_ignorecase(50) not null,
--  constraint fk_authorities_users foreign key(username) references users(username));
--  create unique index ix_auth_username on authorities (username,authority);
insert into LOGIN.authorities ( username, authority ) values ( 'email', 'ADMIN' );
insert into LOGIN.authorities ( username, authority ) values ( 'email', 'USER' );
insert into LOGIN.authorities ( username, authority ) values ( 'testuser@vyllage.com', 'USER' );
insert into LOGIN.authorities ( username, authority ) values ( 'deana@vyllage.com', 'ADVISOR' );
insert into LOGIN.authorities ( username, authority ) values ( 'someone@vyllage.com', 'ADVISOR' );

--create table groups (
--  id bigint generated by default as identity(start with 0) primary key,
--  group_name varchar_ignorecase(50) not null);
insert into LOGIN.groups ( group_name ) values ( 'admins' );
insert into LOGIN.groups ( group_name ) values ( 'users' );
insert into LOGIN.groups ( group_name ) values ( 'advisors' );

--create table group_authorities (
--  group_id bigint not null,
--  authority varchar(50) not null,
--  constraint fk_group_authorities_group foreign key(group_id) references groups(id));
insert into LOGIN.group_authorities ( group_id, authority ) values ( 0, 'ADMIN' );
insert into LOGIN.group_authorities ( group_id, authority ) values ( 1, 'USER' );
insert into LOGIN.group_authorities ( group_id, authority ) values ( 2, 'ADVISOR' );

--create table group_members (
--  id bigint generated by default as identity(start with 0) primary key,
--  username varchar(50) not null,
--  group_id bigint not null,
--  constraint fk_group_members_group foreign key(group_id) references groups(id));
insert into LOGIN.group_members ( username, group_id ) values ( 'email', 0 );
insert into LOGIN.group_members ( username, group_id ) values ( 'testuser@vyllage.com', 1 );
insert into LOGIN.group_members ( username, group_id ) values ( 'deana@vyllage.com', 2 );
insert into LOGIN.group_members ( username, group_id ) values ( 'someone@vyllage.com', 0 );

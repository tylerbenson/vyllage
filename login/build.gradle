springBoot {
    mainClass = 'login.Application'
}

jar {
    baseName = 'login'
    version = '0.0.1-SNAPSHOT'
}

dependencies {
	compile parent.javascriptProjects.findAll { it != project}

	compile 'org.flywaydb:flyway-core'
//	compile("org.hsqldb:hsqldb")
	compile 'com.h2database:h2'
	compile 'org.jooq:jooq:3.5.0'
	
    compile("org.springframework.boot:spring-boot-starter-security")
//    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
//    compile("org.springframework.boot:spring-boot-starter-data-jpa")
//    compile("org.springframework.boot:spring-boot-starter-web")
//    compile("org.springframework.boot:spring-boot-starter-mobile")
//    compile("org.springframework.boot:spring-boot-starter-groovy-templates")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
//    compile("org.springframework.boot:spring-boot-starter-social-facebook")
//    compile("org.springframework.boot:spring-boot-starter-social-linkedin")
//    compile("org.springframework.boot:spring-boot-starter-social-twitter")
//    compile("org.springframework.boot:spring-boot-starter-actuator")
//    compile("org.springframework.boot:spring-boot-starter-remote-shell")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath 'nu.studer:gradle-jooq-plugin:1.0.5'
		classpath 'org.flywaydb:flyway-gradle-plugin:3.1'
		classpath 'com.h2database:h2:1.4.185'
		classpath 'org.jooq:jooq-codegen:3.5.0'
	}
}

apply plugin: 'flyway'

flyway {
	url = "jdbc:h2:$buildDir/db/local"
	user = 'sa'
	password = ''
	schemas = [project.name.toUpperCase()]
	locations = ["classpath:${project.name}/db/migration"]
}

flywayMigrate.inputs.dir 'src/main/resources/db/migrate'
flywayMigrate.outputs.dir "$buildDir/db"

project.afterEvaluate {
	flywayClean.dependsOn -= testClasses
	flywayMigrate.dependsOn = [
		processResources,
		processTestResources
	]
}

apply plugin: 'nu.studer.jooq'

jooq {
	h2(sourceSets.main) {
		jdbc {
			driver = 'org.h2.Driver'
			url = "jdbc:h2:$buildDir/db/local"
			user = 'sa'
			password = ''
			schema = project.name.toUpperCase()
		}
		generator { 
			target { 
				packageName = "${project.name}.domain"
			}
		}
	}
}

generateH2JooqSchemaSource.inputs.dir "$buildDir/db"
generateH2JooqSchemaSource.outputs.dir "$buildDir/generated-src"
generateH2JooqSchemaSource.dependsOn flywayMigrate


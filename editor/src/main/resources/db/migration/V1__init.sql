create schema if not exists EDITOR;

create table if not exists EDITOR.accounts(
	id bigint generated by default as identity(start with 0) primary key,
  	username varchar_ignorecase(50) not null );
  	
create table if not exists EDITOR.documents(
	id bigint generated by default as identity(start with 0) primary key,
	accountId bigint not null,
  	visibility boolean not null,
  	dateCreated timestamp not null,
  	lastModified timestamp not null,
  	constraint fk_documents_accounts foreign key(accountId) references EDITOR.accounts(id));
  	
create table if not exists EDITOR.document_sections(
	id bigint not null AUTO_INCREMENT,
	sectionVersion bigint not null,
	documentId bigint not null,
  	position bigint not null,
  	jsonDocument varchar(4096) not null,
  	dateCreated timestamp not null,
  	lastModified timestamp not null,
  	PRIMARY KEY (id, sectionVersion),
  	constraint fk_section_documents foreign key(documentId) references EDITOR.documents(id));
  	
create table if not exists EDITOR.comments(
	id bigint generated by default as identity(start with 0) primary key,
	sectionId bigint not null,
	username varchar_ignorecase(50) not null,
	commentId bigint,
	commentText varchar(2048),
  	lastModified timestamp not null,
  	constraint fk_comments_document_sections foreign key(sectionId) references EDITOR.document_sections(id));
  	
create table if not exists EDITOR.suggestions(
	id bigint generated by default as identity(start with 0) primary key,
	sectionId bigint not null,
	sectionVersion bigint not null,
	username varchar_ignorecase(50) not null,
	jsonDocument varchar(4096) not null,
  	lastModified timestamp not null,
  	constraint fk_suggestions_document_sections foreign key(sectionId, sectionVersion) references EDITOR.document_sections(id, sectionVersion));
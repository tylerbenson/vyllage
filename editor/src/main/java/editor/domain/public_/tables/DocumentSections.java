/**
 * This class is generated by jOOQ
 */
package editor.domain.public_.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentSections extends org.jooq.impl.TableImpl<editor.domain.public_.tables.records.DocumentSectionsRecord> {

	private static final long serialVersionUID = -1145354146;

	/**
	 * The reference instance of <code>PUBLIC.DOCUMENT_SECTIONS</code>
	 */
	public static final editor.domain.public_.tables.DocumentSections DOCUMENT_SECTIONS = new editor.domain.public_.tables.DocumentSections();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<editor.domain.public_.tables.records.DocumentSectionsRecord> getRecordType() {
		return editor.domain.public_.tables.records.DocumentSectionsRecord.class;
	}

	/**
	 * The column <code>PUBLIC.DOCUMENT_SECTIONS.ID</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.DocumentSectionsRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.DOCUMENT_SECTIONS.SECTIONVERSION</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.DocumentSectionsRecord, java.lang.Long> SECTIONVERSION = createField("SECTIONVERSION", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.DOCUMENT_SECTIONS.DOCUMENTID</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.DocumentSectionsRecord, java.lang.Long> DOCUMENTID = createField("DOCUMENTID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.DOCUMENT_SECTIONS.SORTORDER</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.DocumentSectionsRecord, java.lang.String> SORTORDER = createField("SORTORDER", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.DOCUMENT_SECTIONS.JSONDOCUMENT</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.DocumentSectionsRecord, java.lang.String> JSONDOCUMENT = createField("JSONDOCUMENT", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.DOCUMENT_SECTIONS.DATECREATED</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.DocumentSectionsRecord, java.sql.Timestamp> DATECREATED = createField("DATECREATED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.DOCUMENT_SECTIONS.LASTMODIFIED</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.DocumentSectionsRecord, java.sql.Timestamp> LASTMODIFIED = createField("LASTMODIFIED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.DOCUMENT_SECTIONS</code> table reference
	 */
	public DocumentSections() {
		this("DOCUMENT_SECTIONS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.DOCUMENT_SECTIONS</code> table reference
	 */
	public DocumentSections(java.lang.String alias) {
		this(alias, editor.domain.public_.tables.DocumentSections.DOCUMENT_SECTIONS);
	}

	private DocumentSections(java.lang.String alias, org.jooq.Table<editor.domain.public_.tables.records.DocumentSectionsRecord> aliased) {
		this(alias, aliased, null);
	}

	private DocumentSections(java.lang.String alias, org.jooq.Table<editor.domain.public_.tables.records.DocumentSectionsRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, editor.domain.public_.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<editor.domain.public_.tables.records.DocumentSectionsRecord, java.lang.Long> getIdentity() {
		return editor.domain.public_.Keys.IDENTITY_DOCUMENT_SECTIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<editor.domain.public_.tables.records.DocumentSectionsRecord> getPrimaryKey() {
		return editor.domain.public_.Keys.CONSTRAINT_4;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<editor.domain.public_.tables.records.DocumentSectionsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<editor.domain.public_.tables.records.DocumentSectionsRecord>>asList(editor.domain.public_.Keys.CONSTRAINT_4);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<editor.domain.public_.tables.records.DocumentSectionsRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<editor.domain.public_.tables.records.DocumentSectionsRecord, ?>>asList(editor.domain.public_.Keys.FK_SECTION_DOCUMENTS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public editor.domain.public_.tables.DocumentSections as(java.lang.String alias) {
		return new editor.domain.public_.tables.DocumentSections(alias, this);
	}

	/**
	 * Rename this table
	 */
	public editor.domain.public_.tables.DocumentSections rename(java.lang.String name) {
		return new editor.domain.public_.tables.DocumentSections(name, null);
	}
}

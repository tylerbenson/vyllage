/**
 * This class is generated by jOOQ
 */
package editor.domain.public_.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Accounts extends org.jooq.impl.TableImpl<editor.domain.public_.tables.records.AccountsRecord> {

	private static final long serialVersionUID = -631759826;

	/**
	 * The reference instance of <code>PUBLIC.ACCOUNTS</code>
	 */
	public static final editor.domain.public_.tables.Accounts ACCOUNTS = new editor.domain.public_.tables.Accounts();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<editor.domain.public_.tables.records.AccountsRecord> getRecordType() {
		return editor.domain.public_.tables.records.AccountsRecord.class;
	}

	/**
	 * The column <code>PUBLIC.ACCOUNTS.ID</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.AccountsRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.ACCOUNTS.USERNAME</code>.
	 */
	public final org.jooq.TableField<editor.domain.public_.tables.records.AccountsRecord, java.lang.String> USERNAME = createField("USERNAME", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.ACCOUNTS</code> table reference
	 */
	public Accounts() {
		this("ACCOUNTS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.ACCOUNTS</code> table reference
	 */
	public Accounts(java.lang.String alias) {
		this(alias, editor.domain.public_.tables.Accounts.ACCOUNTS);
	}

	private Accounts(java.lang.String alias, org.jooq.Table<editor.domain.public_.tables.records.AccountsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Accounts(java.lang.String alias, org.jooq.Table<editor.domain.public_.tables.records.AccountsRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, editor.domain.public_.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<editor.domain.public_.tables.records.AccountsRecord, java.lang.Long> getIdentity() {
		return editor.domain.public_.Keys.IDENTITY_ACCOUNTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<editor.domain.public_.tables.records.AccountsRecord> getPrimaryKey() {
		return editor.domain.public_.Keys.CONSTRAINT_A;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<editor.domain.public_.tables.records.AccountsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<editor.domain.public_.tables.records.AccountsRecord>>asList(editor.domain.public_.Keys.CONSTRAINT_A);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public editor.domain.public_.tables.Accounts as(java.lang.String alias) {
		return new editor.domain.public_.tables.Accounts(alias, this);
	}

	/**
	 * Rename this table
	 */
	public editor.domain.public_.tables.Accounts rename(java.lang.String name) {
		return new editor.domain.public_.tables.Accounts(name, null);
	}
}

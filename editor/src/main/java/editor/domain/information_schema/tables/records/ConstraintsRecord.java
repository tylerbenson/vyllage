/**
 * This class is generated by jOOQ
 */
package editor.domain.information_schema.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConstraintsRecord extends org.jooq.impl.TableRecordImpl<editor.domain.information_schema.tables.records.ConstraintsRecord> implements org.jooq.Record13<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer> {

	private static final long serialVersionUID = 1321961529;

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CONSTRAINT_CATALOG</code>.
	 */
	public void setConstraintCatalog(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CONSTRAINT_CATALOG</code>.
	 */
	public java.lang.String getConstraintCatalog() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CONSTRAINT_SCHEMA</code>.
	 */
	public void setConstraintSchema(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CONSTRAINT_SCHEMA</code>.
	 */
	public java.lang.String getConstraintSchema() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CONSTRAINT_NAME</code>.
	 */
	public void setConstraintName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CONSTRAINT_NAME</code>.
	 */
	public java.lang.String getConstraintName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CONSTRAINT_TYPE</code>.
	 */
	public void setConstraintType(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CONSTRAINT_TYPE</code>.
	 */
	public java.lang.String getConstraintType() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.TABLE_CATALOG</code>.
	 */
	public void setTableCatalog(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.TABLE_CATALOG</code>.
	 */
	public java.lang.String getTableCatalog() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.TABLE_SCHEMA</code>.
	 */
	public void setTableSchema(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.TABLE_SCHEMA</code>.
	 */
	public java.lang.String getTableSchema() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.TABLE_NAME</code>.
	 */
	public void setTableName(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.TABLE_NAME</code>.
	 */
	public java.lang.String getTableName() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.UNIQUE_INDEX_NAME</code>.
	 */
	public void setUniqueIndexName(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.UNIQUE_INDEX_NAME</code>.
	 */
	public java.lang.String getUniqueIndexName() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CHECK_EXPRESSION</code>.
	 */
	public void setCheckExpression(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.CHECK_EXPRESSION</code>.
	 */
	public java.lang.String getCheckExpression() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.COLUMN_LIST</code>.
	 */
	public void setColumnList(java.lang.String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.COLUMN_LIST</code>.
	 */
	public java.lang.String getColumnList() {
		return (java.lang.String) getValue(9);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.REMARKS</code>.
	 */
	public void setRemarks(java.lang.String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.REMARKS</code>.
	 */
	public java.lang.String getRemarks() {
		return (java.lang.String) getValue(10);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.SQL</code>.
	 */
	public void setSql(java.lang.String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.SQL</code>.
	 */
	public java.lang.String getSql() {
		return (java.lang.String) getValue(11);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.CONSTRAINTS.ID</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.CONSTRAINTS.ID</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(12);
	}

	// -------------------------------------------------------------------------
	// Record13 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row13<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row13) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row13<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer> valuesRow() {
		return (org.jooq.Row13) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.CONSTRAINT_CATALOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.CONSTRAINT_SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.CONSTRAINT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.CONSTRAINT_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.TABLE_CATALOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.TABLE_SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.TABLE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.UNIQUE_INDEX_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.CHECK_EXPRESSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field10() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.COLUMN_LIST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field11() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.REMARKS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field12() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.SQL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field13() {
		return editor.domain.information_schema.tables.Constraints.CONSTRAINTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getConstraintCatalog();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getConstraintSchema();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getConstraintName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getConstraintType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getTableCatalog();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getTableSchema();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getTableName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getUniqueIndexName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getCheckExpression();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value10() {
		return getColumnList();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value11() {
		return getRemarks();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value12() {
		return getSql();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value13() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value1(java.lang.String value) {
		setConstraintCatalog(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value2(java.lang.String value) {
		setConstraintSchema(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value3(java.lang.String value) {
		setConstraintName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value4(java.lang.String value) {
		setConstraintType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value5(java.lang.String value) {
		setTableCatalog(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value6(java.lang.String value) {
		setTableSchema(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value7(java.lang.String value) {
		setTableName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value8(java.lang.String value) {
		setUniqueIndexName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value9(java.lang.String value) {
		setCheckExpression(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value10(java.lang.String value) {
		setColumnList(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value11(java.lang.String value) {
		setRemarks(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value12(java.lang.String value) {
		setSql(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord value13(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintsRecord values(java.lang.String value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.String value5, java.lang.String value6, java.lang.String value7, java.lang.String value8, java.lang.String value9, java.lang.String value10, java.lang.String value11, java.lang.String value12, java.lang.Integer value13) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ConstraintsRecord
	 */
	public ConstraintsRecord() {
		super(editor.domain.information_schema.tables.Constraints.CONSTRAINTS);
	}

	/**
	 * Create a detached, initialised ConstraintsRecord
	 */
	public ConstraintsRecord(java.lang.String constraintCatalog, java.lang.String constraintSchema, java.lang.String constraintName, java.lang.String constraintType, java.lang.String tableCatalog, java.lang.String tableSchema, java.lang.String tableName, java.lang.String uniqueIndexName, java.lang.String checkExpression, java.lang.String columnList, java.lang.String remarks, java.lang.String sql, java.lang.Integer id) {
		super(editor.domain.information_schema.tables.Constraints.CONSTRAINTS);

		setValue(0, constraintCatalog);
		setValue(1, constraintSchema);
		setValue(2, constraintName);
		setValue(3, constraintType);
		setValue(4, tableCatalog);
		setValue(5, tableSchema);
		setValue(6, tableName);
		setValue(7, uniqueIndexName);
		setValue(8, checkExpression);
		setValue(9, columnList);
		setValue(10, remarks);
		setValue(11, sql);
		setValue(12, id);
	}
}

/**
 * This class is generated by jOOQ
 */
package editor.domain.information_schema.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueryStatisticsRecord extends org.jooq.impl.TableRecordImpl<editor.domain.information_schema.tables.records.QueryStatisticsRecord> implements org.jooq.Record12<java.lang.String, java.lang.Integer, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Double, java.lang.Double, java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Double, java.lang.Double> {

	private static final long serialVersionUID = -1528602739;

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.SQL_STATEMENT</code>.
	 */
	public void setSqlStatement(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.SQL_STATEMENT</code>.
	 */
	public java.lang.String getSqlStatement() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.EXECUTION_COUNT</code>.
	 */
	public void setExecutionCount(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.EXECUTION_COUNT</code>.
	 */
	public java.lang.Integer getExecutionCount() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MIN_EXECUTION_TIME</code>.
	 */
	public void setMinExecutionTime(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MIN_EXECUTION_TIME</code>.
	 */
	public java.lang.Long getMinExecutionTime() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MAX_EXECUTION_TIME</code>.
	 */
	public void setMaxExecutionTime(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MAX_EXECUTION_TIME</code>.
	 */
	public java.lang.Long getMaxExecutionTime() {
		return (java.lang.Long) getValue(3);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.CUMULATIVE_EXECUTION_TIME</code>.
	 */
	public void setCumulativeExecutionTime(java.lang.Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.CUMULATIVE_EXECUTION_TIME</code>.
	 */
	public java.lang.Long getCumulativeExecutionTime() {
		return (java.lang.Long) getValue(4);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.AVERAGE_EXECUTION_TIME</code>.
	 */
	public void setAverageExecutionTime(java.lang.Double value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.AVERAGE_EXECUTION_TIME</code>.
	 */
	public java.lang.Double getAverageExecutionTime() {
		return (java.lang.Double) getValue(5);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.STD_DEV_EXECUTION_TIME</code>.
	 */
	public void setStdDevExecutionTime(java.lang.Double value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.STD_DEV_EXECUTION_TIME</code>.
	 */
	public java.lang.Double getStdDevExecutionTime() {
		return (java.lang.Double) getValue(6);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MIN_ROW_COUNT</code>.
	 */
	public void setMinRowCount(java.lang.Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MIN_ROW_COUNT</code>.
	 */
	public java.lang.Integer getMinRowCount() {
		return (java.lang.Integer) getValue(7);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MAX_ROW_COUNT</code>.
	 */
	public void setMaxRowCount(java.lang.Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.MAX_ROW_COUNT</code>.
	 */
	public java.lang.Integer getMaxRowCount() {
		return (java.lang.Integer) getValue(8);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.CUMULATIVE_ROW_COUNT</code>.
	 */
	public void setCumulativeRowCount(java.lang.Long value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.CUMULATIVE_ROW_COUNT</code>.
	 */
	public java.lang.Long getCumulativeRowCount() {
		return (java.lang.Long) getValue(9);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.AVERAGE_ROW_COUNT</code>.
	 */
	public void setAverageRowCount(java.lang.Double value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.AVERAGE_ROW_COUNT</code>.
	 */
	public java.lang.Double getAverageRowCount() {
		return (java.lang.Double) getValue(10);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.STD_DEV_ROW_COUNT</code>.
	 */
	public void setStdDevRowCount(java.lang.Double value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.QUERY_STATISTICS.STD_DEV_ROW_COUNT</code>.
	 */
	public java.lang.Double getStdDevRowCount() {
		return (java.lang.Double) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row12<java.lang.String, java.lang.Integer, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Double, java.lang.Double, java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Double, java.lang.Double> fieldsRow() {
		return (org.jooq.Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row12<java.lang.String, java.lang.Integer, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Double, java.lang.Double, java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Double, java.lang.Double> valuesRow() {
		return (org.jooq.Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.SQL_STATEMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.EXECUTION_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.MIN_EXECUTION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field4() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.MAX_EXECUTION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field5() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.CUMULATIVE_EXECUTION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field6() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.AVERAGE_EXECUTION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field7() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.STD_DEV_EXECUTION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field8() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.MIN_ROW_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field9() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.MAX_ROW_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field10() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.CUMULATIVE_ROW_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field11() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.AVERAGE_ROW_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field12() {
		return editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS.STD_DEV_ROW_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getSqlStatement();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getExecutionCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getMinExecutionTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value4() {
		return getMaxExecutionTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value5() {
		return getCumulativeExecutionTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value6() {
		return getAverageExecutionTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value7() {
		return getStdDevExecutionTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value8() {
		return getMinRowCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value9() {
		return getMaxRowCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value10() {
		return getCumulativeRowCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value11() {
		return getAverageRowCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value12() {
		return getStdDevRowCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value1(java.lang.String value) {
		setSqlStatement(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value2(java.lang.Integer value) {
		setExecutionCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value3(java.lang.Long value) {
		setMinExecutionTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value4(java.lang.Long value) {
		setMaxExecutionTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value5(java.lang.Long value) {
		setCumulativeExecutionTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value6(java.lang.Double value) {
		setAverageExecutionTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value7(java.lang.Double value) {
		setStdDevExecutionTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value8(java.lang.Integer value) {
		setMinRowCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value9(java.lang.Integer value) {
		setMaxRowCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value10(java.lang.Long value) {
		setCumulativeRowCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value11(java.lang.Double value) {
		setAverageRowCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord value12(java.lang.Double value) {
		setStdDevRowCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QueryStatisticsRecord values(java.lang.String value1, java.lang.Integer value2, java.lang.Long value3, java.lang.Long value4, java.lang.Long value5, java.lang.Double value6, java.lang.Double value7, java.lang.Integer value8, java.lang.Integer value9, java.lang.Long value10, java.lang.Double value11, java.lang.Double value12) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QueryStatisticsRecord
	 */
	public QueryStatisticsRecord() {
		super(editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS);
	}

	/**
	 * Create a detached, initialised QueryStatisticsRecord
	 */
	public QueryStatisticsRecord(java.lang.String sqlStatement, java.lang.Integer executionCount, java.lang.Long minExecutionTime, java.lang.Long maxExecutionTime, java.lang.Long cumulativeExecutionTime, java.lang.Double averageExecutionTime, java.lang.Double stdDevExecutionTime, java.lang.Integer minRowCount, java.lang.Integer maxRowCount, java.lang.Long cumulativeRowCount, java.lang.Double averageRowCount, java.lang.Double stdDevRowCount) {
		super(editor.domain.information_schema.tables.QueryStatistics.QUERY_STATISTICS);

		setValue(0, sqlStatement);
		setValue(1, executionCount);
		setValue(2, minExecutionTime);
		setValue(3, maxExecutionTime);
		setValue(4, cumulativeExecutionTime);
		setValue(5, averageExecutionTime);
		setValue(6, stdDevExecutionTime);
		setValue(7, minRowCount);
		setValue(8, maxRowCount);
		setValue(9, cumulativeRowCount);
		setValue(10, averageRowCount);
		setValue(11, stdDevRowCount);
	}
}
